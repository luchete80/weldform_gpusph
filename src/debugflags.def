/*  Copyright (c) 2018-2019 INGV, EDF, UniCT, JHU

    Istituto Nazionale di Geofisica e Vulcanologia, Sezione di Catania, Italy
    Électricité de France, Paris, France
    Università di Catania, Catania, Italy
    Johns Hopkins University, Baltimore (MD), USA

    This file is part of GPUSPH. Project founders:
        Alexis Hérault, Giuseppe Bilotta, Robert A. Dalrymple,
        Eugenio Rustico, Ciro Del Negro
    For a full list of authors and project partners, consult the logs
    and the project website <https://www.gpusph.org>

    GPUSPH is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    GPUSPH is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with GPUSPH.  If not, see <http://www.gnu.org/licenses/>.
 */
/*! \file
 * \brief Debug flags definition.
 *
 * Individual debug flags are defined here. This file is included as-is
 * from src/debugflags.h, and is processed to generate two files:
 * src/parse-debugflags.h
 * 	which is included by src/debugflags.cc to parse the flag names
 * src/describe-debugflags.h
 * 	which is included by src/main.cc to provide help on the debug flags
 */

/* Please follow the convention:
 * Each debug flag is preceded by a 'header' comment that describes the flag in
 * a short one-liner. This header comment is marked by a triple / at the beginning
 * of the line.
 * The header is followed by an optional comment providing longer comments
 * (e.g. for Doxygen), and finally by the flag definition itself.
 */

/// print each step as it is being executed
unsigned print_step : 1;

/// debug the neighbors list on host
unsigned neibs : 1;

/// debug forces on host
unsigned forces : 1;

/// debug relative density variation on host
unsigned numerical_density : 1;

/// inspect pre-force particle status
unsigned inspect_preforce : 1;

/// inspect pre-gamma integration particle status
unsigned inspect_pregamma : 1;

/// inspect buffer access
/*! \note This needs compile-time support,
 * #define DEBUG_BUFFER_ACCESS 1
 * in src/buffer.h
 */
unsigned inspect_buffer_access : 1;

/// inspect buffer lists at the end of each command
/*! This is a very verbose inspection: at the end of each command,
 * the state of the buffers across all lists will be printed.
 */
unsigned inspect_buffer_lists : 1;

/// check buffer update
/*! This is used to check that all and only modified buffers
 * are exchanged in an UPDATE_EXTERNAL call
 */
unsigned check_buffer_update : 1;

/// check buffer consistency
/*! When this is enabled, after every command GPUSPH will verify
 * that the shared parts of the subdomains in multi-GPU simulations
 * are consistent across devices.
 * \note This needs compile-time support,
 * add -DINSPECT_DEVICE_MEMORY to CPPFLAGS in Makefile.local
 */
unsigned check_buffer_consistency : 1;

/// clobber invalid buffers
/*! When this is true, every time a buffer is marked invalid,
 * its content will be clobbered (reset to the initial value,
 * typically NAN or equivalent).
 *
 * Useful to check that stale data is not being used.
 *
 * \note This needs compile-time support,
 * #define DEBUG_BUFFER_ACCESS 1
 * in src/buffer.h
 */
unsigned clobber_invalid_buffers : 1;

/// Throw (instead of just warn) if a particle is out of bounds during init
unsigned validate_init_positions : 1;

/// Measure (and show) command runtimes
unsigned benchmark_command_runtimes : 1;

/* vim: set ft=cpp: */
